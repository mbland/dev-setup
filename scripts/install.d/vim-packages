#! /bin/bash
#
# Install Vim packages into the $HOME/.vim directory
#
# Globals:
#   VIM_SCRIPTS:
#     Array of strings of the format "<script-path>|<script-download-url>"
#     where <script-path> is relative to $HOME/.vim
#   VIM_PATHOGEN_BUNDLE_REPOS:
#     Array of GitHub repos for Pathogen packages of the form "<user>/<repo>"

declare -r __PATHOGEN_URL='https://tpo.pe/pathogen.vim'
declare -r __PATHOGEN_FILE='.vim/autoload/pathogen.vim'
declare -r __PATHOGEN_BUNDLE_DIR='.vim/bundle'

_install_vim_scripts() {
  local script_spec
  local script_url
  local script_path
  local script_abs_path
  local script_abs_parent_path

  if [[ "$#" -eq 0 ]]; then
    return
  fi

  for script_spec in "${VIM_SCRIPTS}"; do
    script_path="${script_spec%%|*}"
    script_url="${script_spec#*|}"
    script_abs_path="$HOME/.vim/$script_path"
    script_abs_parent_path="${script_abs_path%/*}"

    if [[ ! -d "$script_abs_parent_path" ]]; then
      mkdir -p "$script_abs_parent_path"
    fi

    if [[ -f "$script_abs_path" ]]; then
      echo "Already present: .vim/$script_path"
    else
      echo "Installing: .vim/$script_path from $script_url"
      curl -LSso "$script_abs_path" "$script_url"
    fi
  done
}

_install_vim_pathogen() {
  local pathogen_file="$HOME/$__PATHOGEN_FILE"
  local pathogen_dir="${pathogen_file%/*}"
  local target_dir

  if [[ -f "$pathogen_file" ]]; then
    echo "Already present: $__PATHOGEN_FILE"
    return
  fi

  echo "Installing: $__PATHOGEN_FILE"

  if [[ ! -d "$pathogen_dir" ]]; then
    mkdir -p "${pathogen_dir}"
  fi
  curl -LSso "$pathogen_file" "$__PATHOGEN_URL"
}

_install_vim_pathogen_packages() {
  local pathogen_package_dir="$HOME/$__PATHOGEN_BUNDLE_DIR"
  local package_repo
  local package_name
  local package_path

  if [[ "$#" -eq '0' ]]; then
    return
  fi

  _install_vim_pathogen

  if [[ ! -d "$pathogen_package_dir" ]]; then
    mkdir -p "${pathogen_package_dir}"
  fi

  for package_repo in "$@"; do
    package_name="${package_repo##*/}"
    package_name="${package_name#vim-}"
    package_name="${package_name%-vim}"
    package_path="$pathogen_package_dir/$package_name"

    if [[ -d "$package_path" ]]; then
      echo "Already present: $__PATHOGEN_BUNDLE_DIR/$package_name"
    else
      echo "Installing: $__PATHOGEN_BUNDLE_DIR/$package_name"
      git clone "git@github.com:$package_repo.git" "$package_path"
    fi
  done
}

_install_vim_packages() {
  _install_vim_scripts "${VIM_SCRIPTS[@]}"
  _install_vim_pathogen_packages "${VIM_PATHOGEN_BUNDLE_REPOS[@]}"
}

_install_vim_packages
